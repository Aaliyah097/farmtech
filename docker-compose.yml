version: '3'
services:
  postgres:
    container_name: postgres-farm-tech-db
    image: postgres:15-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-chat}
    ports:
      - "5432:5432"
    networks:
      - local_network
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
  redis:
    container_name: redis-farm-tech-cache
    image: "redis:alpine"
    command: redis-server --requirepass ${REDIS_PASSWORD:-change}
    ports:
      - "6379:6379"
    networks:
      - local_network
  web:
    container_name: web
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    networks:
      - local_network
  nginx:
    restart: always
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./logs:/srv/www/farmtech/logs
      - ./static:/srv/www/farmtech/static
      - ./media:/srv/www/farmtech/media
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - web
    networks:
      - local_network
  celery:
    build: .
    command: celery -A farmtech worker --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - redis
    networks:
      - local_network
  celery_beat:
    build: .
    environment:
      - POSTGRES_HOST=postgres-farm-tech-db
    command: celery -A farmtech beat --loglevel=info
    volumes:
      - .:/code
    depends_on:
      - redis
    networks:
      - local_network
  flower:
    image: mher/flower
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}
      - FLOWER_PORT=5555
    ports:
      - "5555:5555"
    networks:
      - local_network
    depends_on:
      - redis
      - celery
networks:
  local_network:
    driver: bridge